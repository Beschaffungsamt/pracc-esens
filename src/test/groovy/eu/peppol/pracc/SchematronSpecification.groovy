/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package eu.peppol.pracc

import com.helger.schematron.xslt.SchematronResourceSCH
import groovy.util.logging.Slf4j
import org.oclc.purl.dsdl.svrl.FailedAssert
import org.oclc.purl.dsdl.svrl.SchematronOutputType
import spock.lang.Specification

import javax.xml.transform.stream.StreamSource

@Slf4j
class SchematronSpecification extends Specification {

    def 'run schematron on instances'() {

        def schematronFile = new File(schematronFileName)
        given:
        def schematronResource = SchematronResourceSCH.fromFile(schematronFile)
        def xmlFile = new File(xmlFileName)

        when:
        log.info("running validation on ${xmlFile.name} with schematron ${schematronFile.name}")

        SchematronOutputType result
        xmlFile.withInputStream {
            result = schematronResource.applySchematronValidationToSVRL(new StreamSource(it))
        }
        def failedAsserts = result?.getActivePatternAndFiredRuleAndFailedAssert()?.findAll { it instanceof FailedAssert }
        failedAsserts?.each { log.info("found ${it}") }

        then:
        failedAsserts?.isEmpty()

        where:
        schematronFileName                                                       | xmlFileName
        'rules/peppol-procurement-procedure-subscription-1.0/ESENS-UBL-T001.sch' | 'guides/transactions/T001/files/ExpressionOfInterestRequest-instance.xml'
        'rules/peppol-procurement-procedure-subscription-1.0/ESENS-UBL-T002.sch' | 'guides/transactions/T002/files/ExpressionOfInterestResponse-instance.xml'
        'rules/peppol-tender-status-inquiry-1.0/ESENS-UBL-T003.sch'              | 'guides/transactions/T003/files/TenderStatusRequest-instance.xml'
        'rules/peppol-call-for-tender-1.0/peppol/ESENS-UBL-T004.sch'             | 'guides/transactions/T004/files/call-for-tenders-instance.xml'
        'rules/peppol-tender-1.0/peppol/ESENS-UBL-T005.sch'                      | 'guides/transactions/T005/files/tender-instance.xml'
        'rules/peppol-tender-1.0/peppol/ESENS-UBL-T006.sch'                      | 'guides/transactions/T006/files/tender-receipt-instance.xml'
        'rules/peppol-call-for-tender-question-and-answers-1.0/PEPPOL-T007.sch'  | 'guides/transactions/T007/files/TenderingQuestions-instance.xml'
        'rules/peppol-call-for-tender-question-and-answers-1.0/PEPPOL-T008.sch'  | 'guides/transactions/T008/files/TenderingAnswers-instance.xml'
        'rules/tender-clarification-1.0/PEPPOL-T009.sch'                         | 'guides/transactions/T009/files/TenderClarificationRequest-instance.xml'
        'rules/tender-clarification-1.0/PEPPOL-T010.sch'                         | 'guides/transactions/T010/files/TenderClarification-instance.xml'
    }
}
